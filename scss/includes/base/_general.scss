
	/* GENERAL */
	/* ----------------------------------------- */

		html {
			font-size:18px;
			max-width:100vw;
		
			@include mq('desktop-wide') {
				font-size:16px;
			}

			@include mq('tablet') {
				font-size:14px;
			}
		}

		body {	
			@include flex-col(flex-start,center);
			@each $key, $value in $primary {
				#{"" + $key}: $value ;
			}

			#wrapper {
				max-width:100vw;

				.background-shape {
					overflow-x:hidden;
					min-height:100vh;
					width:100px;
					align-self:stretch;
					position:fixed;
					right:8%;
					z-index:-5;
					background-color:map-get($colors, 'pink' );
					transform:skew(-20deg);
					transform-origin: top center;
					pointer-events: none;
					opacity:1;
					transition:all ease 5s;

					&.active {
						opacity:0;
						transition:all ease 2s;
					}

					@include mq('tablet') {
						width:50px;
						right:5%;
						min-height:75vh;
					}

					@include mq('tablet-small') {
						width:25px;
						right:0;
					}
				}

				main.main {
					padding:0 map-get($layout, 'content-margin' );
					@include flex-col(flex-start, center);
				}
			}

			@include mq('desktop-wide') {
				padding-top:0px;
			}
		}


		//Anchor
		a,
		a:hover,
		a:active,
		a:visited {
			outline: none;
			text-decoration:none;
			color:inherit;
		}


		@each $key, $value in $colors {
			.bg#{$key} {
				background: $value;
			}

			.color#{$key} {
				color: $value;
			}

			.hovercolor#{$key}:hover {
				color: $value;
				transition: background 0.5s ease;
			}

			.hoverbg#{$key}:hover {
				background: $value;
				transition: background 0.5s ease;
			}

			.hovercolordarken#{$key}:hover {
				color: darken($value,10%);
				transition: background 0.5s ease;
			}

			.hoverbgdarken#{$key}:hover {
				background: darken($value,10%);
				transition: background 0.5s ease;
			}

			.hovercolorlighten#{$key}:hover {
				color: lighten($value,10%);
				transition: background 0.5s ease;
			}

			.hoverbglighten#{$key}:hover {
				background: lighten($value,10%);
				transition: background 0.5s ease;
			}


		}
		
		// Selections
		::selection {
		    color: map-get($colors, 'white'); 
		    background: map-get($colors, 'blue');
		}
		

		//Box Sizing
		*,
		*:before,
		*:after {
			box-sizing:border-box;
		}

		//Resets
		* {
			margin: 0;
			padding: 0;
		}

		ul {
			@include list-reset();
		}

		img {
			max-width: 100%;
			height: auto;
		}

		.responsive-only {
			display: none;

			@include mq('tablet') {
				display: block;
			}
		}

		section {
			max-width:100vw !important;
			
			&.component {
				width:100%;
				max-width:map-get($layout, 'max-width' );
				min-height:100vh;
				align-self:stretch;
				@include flex-col(flex-start,flex-start);
				flex-wrap:nowrap;
				margin:50px 0;

				@include mq('tablet') {
					min-height:75vh !important;
				}
				

				.section-heading {
					height:auto;

					@include mq('tablet') {
						width:90%;
					}
				}

				.section-wrapper {
					position:absolute;
				}

				.section-content {
					height:80%;
					padding:30px;
					

					@include mq('tablet') {
						flex-direction: column;
						padding: 30px 0px;
						width:90%;
					}
				}
			}
		}